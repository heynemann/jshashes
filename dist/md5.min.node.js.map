{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./tools.js","webpack:///./algo/md5.js","webpack:///./md5.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;;AAEA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA,eAAe,OAAO;AACtB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjRA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,cAAcqCAAqC,MAAM;AACvD;AACA,mGAAmG,sDAAsD;AACzJ,mFAAmF;AACnF,qFAAqF;AACrF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AC9PA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA","file":"md5.min.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","function utf8Encode(str) {\n  var x, y, output = '',\n    i = -1,\n    l;\n\n  if (str && str.length) {\n    l = str.length;\n    while ((i += 1) < l) {\n      /* Decode utf-16 surrogate pairs */\n      x = str.charCodeAt(i);\n      y = i + 1 < l ? str.charCodeAt(i + 1) : 0;\n      if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\n        x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n        i += 1;\n      }\n      /* Encode output as utf-8 */\n      if (x <= 0x7F) {\n        output += String.fromCharCode(x);\n      } else if (x <= 0x7FF) {\n        output += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F),\n          0x80 | (x & 0x3F));\n      } else if (x <= 0xFFFF) {\n        output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n          0x80 | ((x >>> 6) & 0x3F),\n          0x80 | (x & 0x3F));\n      } else if (x <= 0x1FFFFF) {\n        output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n          0x80 | ((x >>> 12) & 0x3F),\n          0x80 | ((x >>> 6) & 0x3F),\n          0x80 | (x & 0x3F));\n      }\n    }\n  }\n  return output;\n}\n\nfunction utf8Decode(str) {\n  var i, ac, c1, c2, c3, arr = [],\n    l;\n  i = ac = c1 = c2 = c3 = 0;\n\n  if (str && str.length) {\n    l = str.length;\n    str += '';\n\n    while (i < l) {\n      c1 = str.charCodeAt(i);\n      ac += 1;\n      if (c1 < 128) {\n        arr[ac] = String.fromCharCode(c1);\n        i += 1;\n      } else if (c1 > 191 && c1 < 224) {\n        c2 = str.charCodeAt(i + 1);\n        arr[ac] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n        i += 2;\n      } else {\n        c2 = str.charCodeAt(i + 1);\n        c3 = str.charCodeAt(i + 2);\n        arr[ac] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n        i += 3;\n      }\n    }\n  }\n  return arr.join('');\n}\n\n/**\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\nfunction safe_add(x, y) {\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n    msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/**\n * Bitwise rotate a 32-bit number to the left.\n */\n\nfunction bit_rol(num, cnt) {\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\n/**\n * Convert a raw string to a hex string\n */\n\nfunction rstr2hex(input, hexcase) {\n  var hex_tab = hexcase ? '0123456789ABCDEF' : '0123456789abcdef',\n    output = '',\n    x, i = 0,\n    l = input.length;\n  for (; i < l; i += 1) {\n    x = input.charCodeAt(i);\n    output += hex_tab.charAt((x >>> 4) & 0x0F) + hex_tab.charAt(x & 0x0F);\n  }\n  return output;\n}\n\n/**\n * Encode a string as utf-16\n */\n\nfunction str2rstr_utf16le(input) {\n  var i, l = input.length,\n    output = '';\n  for (i = 0; i < l; i += 1) {\n    output += String.fromCharCode(input.charCodeAt(i) & 0xFF, (input.charCodeAt(i) >>> 8) & 0xFF);\n  }\n  return output;\n}\n\nfunction str2rstr_utf16be(input) {\n  var i, l = input.length,\n    output = '';\n  for (i = 0; i < l; i += 1) {\n    output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF, input.charCodeAt(i) & 0xFF);\n  }\n  return output;\n}\n\n/**\n * Convert an array of big-endian words to a string\n */\n\nfunction binb2rstr(input) {\n  var i, l = input.length * 32,\n    output = '';\n  for (i = 0; i < l; i += 8) {\n    output += String.fromCharCode((input[i >> 5] >>> (24 - i % 32)) & 0xFF);\n  }\n  return output;\n}\n\n/**\n * Convert an array of little-endian words to a string\n */\n\nfunction binl2rstr(input) {\n  var i, l = input.length * 32,\n    output = '';\n  for (i = 0; i < l; i += 8) {\n    output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n  }\n  return output;\n}\n\n/**\n * Convert a raw string to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\nfunction rstr2binl(input) {\n  var i, l = input.length * 8,\n    output = Array(input.length >> 2),\n    lo = output.length;\n  for (i = 0; i < lo; i += 1) {\n    output[i] = 0;\n  }\n  for (i = 0; i < l; i += 8) {\n    output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\n  }\n  return output;\n}\n\n/**\n * Convert a raw string to an array of big-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\nfunction rstr2binb(input) {\n  var i, l = input.length * 8,\n    output = Array(input.length >> 2),\n    lo = output.length;\n  for (i = 0; i < lo; i += 1) {\n    output[i] = 0;\n  }\n  for (i = 0; i < l; i += 8) {\n    output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\n  }\n  return output;\n}\n\n/**\n * Convert a raw string to an arbitrary string encoding\n */\n\nfunction rstr2any(input, encoding) {\n  var divisor = encoding.length,\n    remainders = Array(),\n    i, q, x, ld, quotient, dividend, output, full_length;\n\n  /* Convert to an array of 16-bit big-endian values, forming the dividend */\n  dividend = Array(Math.ceil(input.length / 2));\n  ld = dividend.length;\n  for (i = 0; i < ld; i += 1) {\n    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n  }\n\n  /**\n   * Repeatedly perform a long division. The binary array forms the dividend,\n   * the length of the encoding is the divisor. Once computed, the quotient\n   * forms the dividend for the next step. We stop when the dividend is zerHashes.\n   * All remainders are stored for later use.\n   */\n  while (dividend.length > 0) {\n    quotient = Array();\n    x = 0;\n    for (i = 0; i < dividend.length; i += 1) {\n      x = (x << 16) + dividend[i];\n      q = Math.floor(x / divisor);\n      x -= q * divisor;\n      if (quotient.length > 0 || q > 0) {\n        quotient[quotient.length] = q;\n      }\n    }\n    remainders[remainders.length] = x;\n    dividend = quotient;\n  }\n\n  /* Convert the remainders to the output string */\n  output = '';\n  for (i = remainders.length - 1; i >= 0; i--) {\n    output += encoding.charAt(remainders[i]);\n  }\n\n  /* Append leading zero equivalents */\n  full_length = Math.ceil(input.length * 8 / (Math.log(encoding.length) / Math.log(2)));\n  for (i = output.length; i < full_length; i += 1) {\n    output = encoding[0] + output;\n  }\n  return output;\n}\n\n/**\n * Convert a raw string to a base-64 string\n */\n\nfunction rstr2b64(input, b64pad) {\n  var tab = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    output = '',\n    len = input.length,\n    i, j, triplet;\n  b64pad = b64pad || '=';\n  for (i = 0; i < len; i += 3) {\n    triplet = (input.charCodeAt(i) << 16) | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0) | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\n    for (j = 0; j < 4; j += 1) {\n      if (i * 8 + j * 6 > input.length * 8) {\n        output += b64pad;\n      } else {\n        output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);\n      }\n    }\n  }\n  return output;\n}\n\nmodule.exports = {\n  utf8Encode,\n  utf8Decode,\n  safe_add,\n  bit_rol,\n  rstr2hex,\n  str2rstr_utf16be,\n  str2rstr_utf16le,\n  binb2rstr,\n  binl2rstr,\n  rstr2binb,\n  rstr2binl,\n  rstr2any,\n  rstr2b64,\n}\n","/**\n * @member Hashes\n * @class MD5\n * @constructor\n * @param {Object} [config]\n *\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * See <http://pajhome.org.uk/crypt/md5> for more infHashes.\n */\n\nconst tools = require('../tools')\n\n// private methods\n\n/**\n * Calculate the MD5 of a raw string\n */\n\nfunction rstr(s, utf8) {\n  s = (utf8) ? tools.utf8Encode(s) : s;\n  return tools.binl2rstr(binl(tools.rstr2binl(s), s.length * 8));\n}\n\n/**\n * Calculate the HMAC-MD5, of a key and some data (raw strings)\n */\n\nfunction rstr_hmac(key, data, utf8) {\n  var bkey, ipad, opad, hash, i;\n\n  key = (utf8) ? tools.utf8Encode(key) : key;\n  data = (utf8) ? tools.utf8Encode(data) : data;\n  bkey = tools.rstr2binl(key);\n  if (bkey.length > 16) {\n    bkey = binl(bkey, key.length * 8);\n  }\n\n  ipad = Array(16), opad = Array(16);\n  for (i = 0; i < 16; i += 1) {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n  hash = binl(ipad.concat(tools.rstr2binl(data)), 512 + data.length * 8);\n  return tools.binl2rstr(binl(opad.concat(hash), 512 + 128));\n}\n\n/**\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\nfunction binl(x, len) {\n  var i, olda, oldb, oldc, oldd,\n    a = 1732584193,\n    b = -271733879,\n    c = -1732584194,\n    d = 271733878;\n\n  /* append padding */\n  x[len >> 5] |= 0x80 << ((len) % 32);\n  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n  for (i = 0; i < x.length; i += 16) {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n\n    a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n    d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n    a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n    a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n    a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n    c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n    a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n    d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n    a = tools.safe_add(a, olda);\n    b = tools.safe_add(b, oldb);\n    c = tools.safe_add(c, oldc);\n    d = tools.safe_add(d, oldd);\n  }\n  return Array(a, b, c, d);\n}\n\n/**\n * These functions implement the four basic operations the algorithm uses.\n */\n\nfunction md5_cmn(q, a, b, x, s, t) {\n  return tools.safe_add(tools.bit_rol(tools.safe_add(tools.safe_add(a, q), tools.safe_add(x, t)), s), b);\n}\n\nfunction md5_ff(a, b, c, d, x, s, t) {\n  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n}\n\nfunction md5_gg(a, b, c, d, x, s, t) {\n  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n}\n\nfunction md5_hh(a, b, c, d, x, s, t) {\n  return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5_ii(a, b, c, d, x, s, t) {\n  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n}\n\nclass MD5 {\n  constructor(options) {\n    /**\n     * Private config properties. You may need to tweak these to be compatible with\n     * the server-side, but the defaults work in most cases.\n     * See {@link Hashes.MD5#method-setUpperCase} and {@link Hashes.SHA1#method-setUpperCase}\n     */\n    this.hexcase = (options && typeof options.uppercase === 'boolean') ? options.uppercase : false; // hexadecimal output case format. false - lowercase; true - uppercase\n    this.b64pad = (options && typeof options.pad === 'string') ? options.pad : '='; // base-64 pad character. Defaults to '=' for strict RFC compliance\n    this.utf8 = (options && typeof options.utf8 === 'boolean') ? options.utf8 : true; // enable/disable utf8 encoding\n  }\n\n  // privileged (public) methods\n  hex(s) {\n    return tools.rstr2hex(rstr(s, this.utf8), this.hexcase);\n  }\n\n  b64(s) {\n    return rstr2b64(rstr(s, this.utf8), this.b64pad);\n  }\n\n  any(s, e) {\n    return rstr2any(rstr(s, this.utf8, this.utf8), e);\n  }\n\n  raw(s) {\n    return rstr(s, this.utf8);\n  }\n\n  hex_hmac(k, d) {\n    return tools.rstr2hex(rstr_hmac(k, d, this.utf8), this.hexcase);\n  }\n\n  b64_hmac(k, d) {\n    return rstr2b64(rstr_hmac(k, d, this.utf8), this.b64pad);\n  }\n\n  any_hmac(k, d, e) {\n    return rstr2any(rstr_hmac(k, d, this.utf8), e);\n  }\n\n  /**\n   * Perform a simple self-test to see if the VM is working\n   * @return {String} Hexadecimal hash sample\n   */\n  vm_test() {\n    return hex('abc').toLowerCase() === '900150983cd24fb0d6963f7d28e17f72';\n  }\n\n  /**\n   * Enable/disable uppercase hexadecimal returned string\n   * @param {Boolean}\n   * @return {Object} this\n   */\n  setUpperCase(a) {\n    if (typeof a === 'boolean') {\n      this.hexcase = a;\n    }\n    return this;\n  }\n\n  /**\n   * Defines a base64 pad string\n   * @param {String} Pad\n   * @return {Object} this\n   */\n  setPad(a) {\n    this.b64pad = a || this.b64pad;\n    return this;\n  }\n\n  /**\n   * Defines a base64 pad string\n   * @param {Boolean}\n   * @return {Object} [this]\n   */\n  setUTF8(a) {\n    if (typeof a === 'boolean') {\n      this.utf8 = a;\n    }\n    return this;\n  }\n}\n\nmodule.exports = MD5\n","const md5Hash = require('./algo/md5');\n\nHashes = {\n  /**\n   * @property {String} version\n   * @readonly\n   */\n  VERSION: '1.0.6',\n  MD5: md5Hash\n}\n\nmodule.exports = Hashes\n"],"sourceRoot":""}